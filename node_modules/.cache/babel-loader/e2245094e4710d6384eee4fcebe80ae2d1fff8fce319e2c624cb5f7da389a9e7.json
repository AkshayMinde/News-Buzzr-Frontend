{"ast":null,"code":"import { createStore, compose, applyMiddleware } from \"redux\";\nimport promiseMiddleware from 'redux-promise';\nimport combinedReducers from \"./reducers/index\";\nconst ReduxStore = () => {\n  const webToolEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const middlewareEnhancers = applyMiddleware(promiseMiddleware);\n  const composedEnhancers = webToolEnhancers(middlewareEnhancers);\n  const store = createStore(combinedReducers, composedEnhancers);\n  return store;\n};\n\n// to create redux store above method is used.\n_c = ReduxStore;\nexport default ReduxStore;\nvar _c;\n$RefreshReg$(_c, \"ReduxStore\");","map":{"version":3,"names":["createStore","compose","applyMiddleware","promiseMiddleware","combinedReducers","ReduxStore","webToolEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","middlewareEnhancers","composedEnhancers","store","_c","$RefreshReg$"],"sources":["C:/Users/aksha/Desktop/Web Dev/React.js/news_buzzr/client/src/store/index.js"],"sourcesContent":["import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport promiseMiddleware from 'redux-promise';\r\nimport combinedReducers from \"./reducers/index\";\r\n\r\nconst ReduxStore = () => {\r\n    const webToolEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\tconst middlewareEnhancers = applyMiddleware(promiseMiddleware);\r\n\tconst composedEnhancers = webToolEnhancers(middlewareEnhancers);\r\n\tconst store = createStore(combinedReducers, composedEnhancers);\r\n\treturn store;\r\n}\r\n\r\n// to create redux store above method is used.\r\nexport default ReduxStore;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,OAAO,EAAEC,eAAe,QAAQ,OAAO;AAC7D,OAAOC,iBAAiB,MAAM,eAAe;AAC7C,OAAOC,gBAAgB,MAAM,kBAAkB;AAE/C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACrB,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAoC,IAAIP,OAAO;EAClF,MAAMQ,mBAAmB,GAAGP,eAAe,CAACC,iBAAiB,CAAC;EAC9D,MAAMO,iBAAiB,GAAGJ,gBAAgB,CAACG,mBAAmB,CAAC;EAC/D,MAAME,KAAK,GAAGX,WAAW,CAACI,gBAAgB,EAAEM,iBAAiB,CAAC;EAC9D,OAAOC,KAAK;AACb,CAAC;;AAED;AAAAC,EAAA,GARMP,UAAU;AAShB,eAAeA,UAAU;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}