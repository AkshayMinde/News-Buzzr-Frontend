{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksha\\\\Desktop\\\\Web Dev\\\\React.js\\\\news_buzzr\\\\client\\\\src\\\\components\\\\Contact.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Alert from 'react-bootstrap/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      subject: '',\n      content: '',\n      email: ''\n    },\n    validationSchema: Yup.object({\n      subject: Yup.string().max(30, 'Must be 30 characters or less').required('Headline is required'),\n      content: Yup.string().required('News body is required'),\n      author: Yup.string().max(15, 'Username must be below 15 characters').required('Username is required'),\n      image: Yup.string().url('Must be a valid url').required('Image is required')\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Contact\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Contact, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useFormik","Yup","Alert","jsxDEV","_jsxDEV","Contact","_s","formik","initialValues","subject","content","email","validationSchema","object","string","max","required","author","image","url","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aksha/Desktop/Web Dev/React.js/news_buzzr/client/src/components/Contact.jsx"],"sourcesContent":["import React from 'react';\r\nimport {useFormik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Alert from 'react-bootstrap/Alert'; \r\n\r\nconst Contact = () => {\r\n  const formik = useFormik({\r\n    initialValues : {\r\n    subject:'',\r\n    content:'',\r\n    email:'',\r\n    },\r\n    validationSchema: Yup.object({\r\n    subject: Yup.string().max(30, 'Must be 30 characters or less').required('Headline is required'),\r\n    content: Yup.string().required('News body is required'),\r\n    author: Yup.string().max(15, 'Username must be below 15 characters').required('Username is required'),\r\n    image: Yup.string().url('Must be a valid url').required('Image is required')\r\n    }),\r\n  })\r\n  return (\r\n    <div>Contact</div>\r\n  )\r\n}\r\n\r\nexport default Contact;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,QAAO,QAAQ;AAChC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAOC,KAAK,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,MAAM,GAAGP,SAAS,CAAC;IACvBQ,aAAa,EAAG;MAChBC,OAAO,EAAC,EAAE;MACVC,OAAO,EAAC,EAAE;MACVC,KAAK,EAAC;IACN,CAAC;IACDC,gBAAgB,EAAEX,GAAG,CAACY,MAAM,CAAC;MAC7BJ,OAAO,EAAER,GAAG,CAACa,MAAM,CAAC,CAAC,CAACC,GAAG,CAAC,EAAE,EAAE,+BAA+B,CAAC,CAACC,QAAQ,CAAC,sBAAsB,CAAC;MAC/FN,OAAO,EAAET,GAAG,CAACa,MAAM,CAAC,CAAC,CAACE,QAAQ,CAAC,uBAAuB,CAAC;MACvDC,MAAM,EAAEhB,GAAG,CAACa,MAAM,CAAC,CAAC,CAACC,GAAG,CAAC,EAAE,EAAE,sCAAsC,CAAC,CAACC,QAAQ,CAAC,sBAAsB,CAAC;MACrGE,KAAK,EAAEjB,GAAG,CAACa,MAAM,CAAC,CAAC,CAACK,GAAG,CAAC,qBAAqB,CAAC,CAACH,QAAQ,CAAC,mBAAmB;IAC3E,CAAC;EACH,CAAC,CAAC;EACF,oBACEZ,OAAA;IAAAgB,QAAA,EAAK;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEtB,CAAC;AAAAlB,EAAA,CAjBKD,OAAO;EAAA,QACIL,SAAS;AAAA;AAAAyB,EAAA,GADpBpB,OAAO;AAmBb,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}